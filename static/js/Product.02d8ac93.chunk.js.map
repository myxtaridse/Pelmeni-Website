{"version":3,"file":"static/js/Product.02d8ac93.chunk.js","mappings":"gNAoBA,MAqIA,EArI0BA,KAExB,MAAMC,EAAa,CAAC,gEAAe,4DAE5BC,EAAYC,GAAiBC,EAAAA,SAAe,IAC5CC,EAAYC,GAAiBF,EAAAA,SAAe,IAE5CG,EAAcC,GAAmBJ,EAAAA,YAClC,GAAEK,IAAOC,EAAAA,EAAAA,KAETC,GAAWC,EAAAA,EAAAA,MAEjBR,EAAAA,WAAgB,MACdS,iBACE,IACE,MAAMC,QAAYC,EAAAA,EAAMC,IAAI,qDAADC,OAC4BR,IAGvDD,EAAgBM,EAAII,KACtB,CAAE,MAAOC,GACPC,MAAM,SACNT,EAAS,IACX,CACF,CACAU,EAAa,GACZ,IAEH,MAAMC,GAAWC,EAAAA,EAAAA,MAEjB,IAAKhB,EACH,OACEiB,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,GAAa,MAKpB,IAAIC,EAAO,IAAKpB,GAChB,MAAMqB,EAAc3B,EAAWC,GACzB2B,EAAcF,EAAKG,MAAMzB,GAsB/B,OACE0B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBP,SAAA,EAChCD,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,eAAcP,UAC3BD,EAAAA,EAAAA,KAAA,OAAKS,IAAK1B,EAAa2B,SAAUC,IAAI,eAEvCJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBP,SAAA,EACjCD,EAAAA,EAAAA,KAAA,MAAAC,SAAKlB,EAAa6B,QAClBL,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,wCACM,KACRD,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,uBAAsBP,SAAElB,EAAa8B,kBAEpDN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBP,SAAA,EAChCD,EAAAA,EAAAA,KAAA,MAAAC,SACGlB,EAAa+B,MAAMC,KAAKC,IAErBhB,EAAAA,EAAAA,KAAA,MAEEQ,UAAW9B,IAAesC,EAAO,SAAW,GAC5CC,QAASA,IAAMtC,EAAcqC,GAAMf,SAElCxB,EAAWuC,IAJPA,QASbhB,EAAAA,EAAAA,KAAA,MAAAC,SACGlB,EAAauB,MAAMS,KAAI,CAACG,EAAcC,KAEnCZ,EAAAA,EAAAA,MAAA,MAEEU,QAASA,IAAMnC,EAAcqC,GAC7BX,UAAW3B,IAAesC,EAAI,SAAW,GAAGlB,SAAA,CAE3CiB,EAAK,mBAJDA,WAUfX,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBP,SAAA,EACtCM,EAAAA,EAAAA,MAACa,EAAAA,GAAI,CACHC,GAAG,IACHb,UAAU,iDAAgDP,SAAA,EAE1DD,EAAAA,EAAAA,KAAA,OACEsB,MAAM,IACNC,OAAO,KACPC,QAAQ,WACRC,KAAK,OACLC,MAAM,6BAA4BzB,UAElCD,EAAAA,EAAAA,KAAA,QACE2B,EAAE,4BACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,aAInB/B,EAAAA,EAAAA,KAAA,QAAAC,SAAM,8FAERD,EAAAA,EAAAA,KAAA,OAAKiB,QA5EMe,KACjBC,OAAOC,eAAe/B,EAAM,QAAS,CACnCgC,MAAO/B,IAET6B,OAAOC,eAAe/B,EAAM,QAAS,CACnCgC,MAAO9B,IAITP,GAASsC,EAAAA,EAAAA,IAAajC,GAAM,EAmEIK,UAAU,iBAAgBP,UAClDD,EAAAA,EAAAA,KAAA,QAAAC,SAAM,iHAIR,C","sources":["pages/Product.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport { addCartValue } from \"../redux/cartSlice/slicesCart\";\r\n\r\nimport { SkeletProduct } from \"../components/index\";\r\n\r\ntype ProductProps = {\r\n  id: string;\r\n  count: number;\r\n  imageUrl: string;\r\n  name: string;\r\n  price: number;\r\n  sizes: any;\r\n  types: any;\r\n  composition: number;\r\n};\r\n\r\nconst Product: React.FC = () => {\r\n  // React.FC - это функциональный компонент - тип\r\n  const typesNames = [\"без бульона\", \"с бульоном\"];\r\n\r\n  const [activeType, setActiveType] = React.useState(0);\r\n  const [activeSize, setActiveSize] = React.useState(0);\r\n\r\n  const [productItems, setProductItems] = React.useState<ProductProps>();\r\n  const { id } = useParams();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  React.useEffect(() => {\r\n    async function productShow() {\r\n      try {\r\n        const res = await Axios.get(\r\n          `https://66028e549d7276a755538691.mockapi.io/items/${id}`\r\n        );\r\n\r\n        setProductItems(res.data);\r\n      } catch (error) {\r\n        alert(\"error\");\r\n        navigate(\"/\");\r\n      }\r\n    }\r\n    productShow();\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  if (!productItems) {\r\n    return (\r\n      <div>\r\n        <SkeletProduct />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  let item = { ...productItems };\r\n  const typesChange = typesNames[activeType];\r\n  const sizesChange = item.sizes[activeSize];\r\n\r\n  //console.log(typesNames[types], sizes[activeType]);\r\n\r\n  // const { types, sizes, ...delProps } = productItems;\r\n  // console.log(productItems.types);\r\n  // console.log(delProps);\r\n\r\n  const onClickAdd = () => {\r\n    Object.defineProperty(item, \"types\", {\r\n      value: typesChange,\r\n    });\r\n    Object.defineProperty(item, \"sizes\", {\r\n      value: sizesChange,\r\n    });\r\n    //console.log(item);\r\n\r\n    dispatch(addCartValue(item));\r\n  };\r\n\r\n  // console.log(types, sizes);\r\n\r\n  return (\r\n    <div className=\"container product\">\r\n      <div className=\"product__img\">\r\n        <img src={productItems.imageUrl} alt=\"product\" />\r\n      </div>\r\n      <div className=\"product__character\">\r\n        <h1>{productItems.name}</h1>\r\n        <h4>\r\n          Состав:{\" \"}\r\n          <b className=\"product__composition\">{productItems.composition}</b>\r\n        </h4>\r\n        <div className=\"product__selector\">\r\n          <ul>\r\n            {productItems.types.map((type: any) => {\r\n              return (\r\n                <li\r\n                  key={type}\r\n                  className={activeType === type ? \"active\" : \"\"}\r\n                  onClick={() => setActiveType(type)}\r\n                >\r\n                  {typesNames[type]}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <ul>\r\n            {productItems.sizes.map((size: number, i: number) => {\r\n              return (\r\n                <li\r\n                  key={size}\r\n                  onClick={() => setActiveSize(i)}\r\n                  className={activeSize === i ? \"active\" : \"\"}\r\n                >\r\n                  {size} гр.\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n        <div className=\"product__bottom-buttons\">\r\n          <Link\r\n            to=\"/\"\r\n            className=\"button button--outline button--add go-back-btn\"\r\n          >\r\n            <svg\r\n              width=\"8\"\r\n              height=\"14\"\r\n              viewBox=\"0 0 8 14\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M7 13L1 6.93015L6.86175 1\"\r\n                stroke=\"#D3D3D3\"\r\n                strokeWidth=\"1.5\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              ></path>\r\n            </svg>\r\n\r\n            <span>Вернуться назад</span>\r\n          </Link>\r\n          <div onClick={onClickAdd} className=\"button pay-btn\">\r\n            <span>Добавить в корзину</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n"],"names":["Product","typesNames","activeType","setActiveType","React","activeSize","setActiveSize","productItems","setProductItems","id","useParams","navigate","useNavigate","async","res","Axios","get","concat","data","error","alert","productShow","dispatch","useDispatch","_jsx","children","SkeletProduct","item","typesChange","sizesChange","sizes","_jsxs","className","src","imageUrl","alt","name","composition","types","map","type","onClick","size","i","Link","to","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","onClickAdd","Object","defineProperty","value","addCartValue"],"sourceRoot":""}